pipeline {
  agent any
      stages{
         stage ('Checkout SCM'){
              steps{
                    git branch: 'master',url: 'https://github.com/prahask1996/angular7-sample.git'
          }
         }
         stage('Install node modules'){
            steps{
                      powershell 'npm install'
                      echo "modules installed"
         }
         stage('Build'){
                     powershell 'npm run ng -- build --prod'
                     echo "build successful"
            }
      }
      
         stage('Approval') {
            // no agent, so executors are not used up when waiting for approvals
            //agent none
           // steps {
                script {
                    def deploymentDelay = input id: 'Deploy', message: 'Deploy to production?', submitter: 'rkivisto,admin', parameters: [choice(choices: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24'], description: 'Hours to delay deployment?', name: 'deploymentDelay')]
                    sleep time: deploymentDelay.toInteger(), unit: 'HOURS'
             //   }
            }
        }
       //  stage('Deploy'){
         //             powershell 'pm2 restart all'
        // }
     }
     stage('Build images') {
	      steps {
		bat '''
			  cd sm-shop
			  docker build -f "Dockerfile" -t prahaskattimani/ng7:latest .
		  
		'''
	      }
       }
   
     stage('Push Docker image') {
	  steps{
		    withDockerRegistry([ credentialsId: "DockerHub", url: "" ]){
			
			bat "docker push prahaskattimani/ng7:latest"   
	  	   }
	   }
       } 
    }
node('aws_node') {
    echo 'Unstash'
    unstash 'buildArtifacts'
    echo 'Artifacts copied'

    echo 'Copy'
    powershell 'yes -Recurse (copy -R bundle.7z /var/www/html) -and (cd /var/www/html) -and (7z -xvf bundle.7z)'
    echo 'Copy completed'
}
